-- 자산관리
ALTER TABLE PRODUCT
	DROP CONSTRAINT PK_PRODUCT; -- 자산관리 기본키

-- 실사계획
ALTER TABLE EXAMINATION
	DROP CONSTRAINT PK_EXAMINATION; -- 실사계획 기본키

-- 고객회원테이블
ALTER TABLE CUSTOMER
	DROP CONSTRAINT PK_CUSTOMER; -- 고객회원테이블 기본키

-- 권한정보테이블
ALTER TABLE AUTHORITY
	DROP CONSTRAINT PK_AUTHORITY; -- 권한정보테이블 기본키

-- 직원회원테이블
ALTER TABLE EMPLOYEE
	DROP CONSTRAINT PK_EMPLOYEE; -- 직원회원테이블 기본키

-- 구매정보테이블
ALTER TABLE BUY
	DROP CONSTRAINT PK_BUY; -- 구매정보테이블 기본키

-- 품목테이블
ALTER TABLE ITEM
	DROP CONSTRAINT PK_ITEM; -- 품목테이블 기본키

-- 상담결과테이블
ALTER TABLE ADVICE
	DROP CONSTRAINT PK_ADVICE; -- 상담결과테이블 기본키

-- 방문요청테이블
ALTER TABLE VISIT
	DROP CONSTRAINT PK_VISIT; -- 방문요청테이블 기본키

-- 입고요청처리
ALTER TABLE INPUT
	DROP CONSTRAINT PK_INPUT; -- 입고요청처리 기본키

-- 출고처리
ALTER TABLE OUTPUT
	DROP CONSTRAINT PK_OUTPUT; -- 출고처리 기본키

-- 외부수리기사 as결과등록
ALTER TABLE FIX
	DROP CONSTRAINT PK_FIX; -- 외부수리기사 as결과등록 기본키2

-- 내부수리기사 점검결과등록
ALTER TABLE REPAIR
	DROP CONSTRAINT PK_REPAIR; -- 내부수리기사 점검결과등록 기본키

-- 부품
ALTER TABLE PARTS
	DROP CONSTRAINT PK_PARTS; -- 부품 기본키2

-- 외부수리기사 회수결과등록
ALTER TABLE DEPRIVE
	DROP CONSTRAINT PK_DEPRIVE; -- 외부수리기사 회수결과등록 기본키2

-- 자산관리
DROP TABLE PRODUCT;

-- 실사계획
DROP TABLE EXAMINATION;

-- 고객회원테이블
DROP TABLE CUSTOMER;

-- 권한정보테이블
DROP TABLE AUTHORITY;

-- 직원회원테이블
DROP TABLE EMPLOYEE;

-- 구매정보테이블
DROP TABLE BUY;

-- 품목테이블
DROP TABLE ITEM;

-- 상담결과테이블
DROP TABLE ADVICE;

-- 방문요청테이블
DROP TABLE VISIT;

-- 입고요청처리
DROP TABLE INPUT;

-- 출고처리
DROP TABLE OUTPUT;

-- 외부수리기사 as결과등록
DROP TABLE FIX;

-- 내부수리기사 점검결과등록
DROP TABLE REPAIR;

-- 부품
DROP TABLE PARTS;

-- 외부수리기사 회수결과등록
DROP TABLE DEPRIVE;

-- 사용부품
DROP TABLE USE_PARTS;

-- 실사결과
DROP TABLE EXAM_RESULT;

-- 상담결과상세테이블
DROP TABLE ADVICE_DETAIL;

-- 자산관리
CREATE TABLE PRODUCT (
	PR_ID         VARCHAR2(30)  NOT NULL, -- 자산ID
	BUY_ID        VARCHAR2(40)  NULL,     -- 구매ID
	IT_ID         VARCHAR2(20)  NULL,     -- 품목ID
	IT_NAME       VARCHAR2(40)  NULL,     -- 품목명
	PR_FIRST_DAY  DATE          NULL,     -- 최초입고일자
	PR_IN_DAY     DATE          NULL,     -- 입고일자
	PR_OUT_DAY    DATE          NULL,     -- 출고일자
	PR_OUT_TARGET VARCHAR2(25)  NULL,     -- 출고대상
	PR_LOCATION   VARCHAR2(255) NULL,     -- 지역
	PR_NEEDS      VARCHAR2(255) NULL,     -- 요구사항
	PR_STATE      VARCHAR2(20)  NULL,     -- 자산상태
	PR_COUNT      NUMBER        NULL,     -- 수량
	PR_QR         VARCHAR(30)   NULL      -- QR코드
);

-- 자산관리 기본키
CREATE UNIQUE INDEX PK_PRODUCT
	ON PRODUCT ( -- 자산관리
		PR_ID ASC -- 자산ID
	);

-- 자산관리
ALTER TABLE PRODUCT
	ADD
		CONSTRAINT PK_PRODUCT -- 자산관리 기본키
		PRIMARY KEY (
			PR_ID -- 자산ID
		);

-- 자산관리
COMMENT ON TABLE PRODUCT IS '자산관리를 위한 테이블';

-- 자산ID
COMMENT ON COLUMN PRODUCT.PR_ID IS '제품의 고유 시리얼 넘버';

-- 구매ID
COMMENT ON COLUMN PRODUCT.BUY_ID IS '구매 일련번호';

-- 품목ID
COMMENT ON COLUMN PRODUCT.IT_ID IS '품목 일련번호';

-- 품목명
COMMENT ON COLUMN PRODUCT.IT_NAME IS '해당 제품의 이름';

-- 최초입고일자
COMMENT ON COLUMN PRODUCT.PR_FIRST_DAY IS '해당 제품의 최초입고일자';

-- 입고일자
COMMENT ON COLUMN PRODUCT.PR_IN_DAY IS '해당 제품의 입고일자';

-- 출고일자
COMMENT ON COLUMN PRODUCT.PR_OUT_DAY IS '해당 제품의 출고일';

-- 출고대상
COMMENT ON COLUMN PRODUCT.PR_OUT_TARGET IS '해당 제품을 렌탈하는 대상';

-- 지역
COMMENT ON COLUMN PRODUCT.PR_LOCATION IS '해당 자산이 출고된 지역';

-- 요구사항
COMMENT ON COLUMN PRODUCT.PR_NEEDS IS '고객의 요구사항';

-- 자산상태
COMMENT ON COLUMN PRODUCT.PR_STATE IS '해당 제품의 자산상태';

-- 수량
COMMENT ON COLUMN PRODUCT.PR_COUNT IS '해당 제품의 수량';

-- QR코드
COMMENT ON COLUMN PRODUCT.PR_QR IS '해당 제품의 QR코드';

-- 실사계획
CREATE TABLE EXAMINATION (
	EX_ID      VARCHAR2(20)  NOT NULL, -- 실사번호
	EX_START   VARCHAR2(10)  NULL,     -- 시작기간
	EX_END     VARCHAR2(10)  NULL,     -- 종료기간
	EX_CONTENT VARCHAR2(255) NULL      -- 비고
);

-- 실사계획 기본키
CREATE UNIQUE INDEX PK_EXAMINATION
	ON EXAMINATION ( -- 실사계획
		EX_ID ASC -- 실사번호
	);

-- 실사계획
ALTER TABLE EXAMINATION
	ADD
		CONSTRAINT PK_EXAMINATION -- 실사계획 기본키
		PRIMARY KEY (
			EX_ID -- 실사번호
		);

-- 실사계획
COMMENT ON TABLE EXAMINATION IS '실사관리를 위한 테이블';

-- 실사번호
COMMENT ON COLUMN EXAMINATION.EX_ID IS '해당 실사의 번호';

-- 시작기간
COMMENT ON COLUMN EXAMINATION.EX_START IS '해당 실사의 시작기간';

-- 종료기간
COMMENT ON COLUMN EXAMINATION.EX_END IS '해당 실사의 종료기간';

-- 비고
COMMENT ON COLUMN EXAMINATION.EX_CONTENT IS '비고';

-- 고객회원테이블
CREATE TABLE CUSTOMER (
	CU_ID         VARCHAR2(30)  NOT NULL, -- 고객아이디
	CU_PW         VARCHAR2(30)  NULL,     -- 비밀번호
	CU_NAME       VARCHAR2(25)  NULL,     -- 성명
	CU_BIRTH      VARCHAR2(10)  NULL,     -- 생년월일
	CU_MOBILE     VARCHAR2(15)  NULL,     -- 휴대전화
	CU_POST       VARCHAR2(6)   NULL,     -- 우편번호
	CU_ADDR       VARCHAR2(255) NULL,     -- 주소
	CU_ADD_D      VARCHAR2(255) NULL,     -- 상세주소
	CU_CCOMPANY   VARCHAR2(40)  NULL,     -- 카드사
	CU_CARD       VARCHAR2(20)  NULL,     -- 카드번호
	CU_CBANK      VARCHAR2(40)  NULL,     -- 은행
	CU_ACCOUNT    VARCHAR2(20)  NULL,     -- 계좌번호
	CU_ENTRY_DATE VARCHAR2(10)  NULL,     -- 가입일
	CU_STATE      VARCHAR(1)    NULL,     -- 유저상태
	CU_UPDATE     VARCHAR2(10)  NULL      -- 상태변경일
);

-- 고객회원테이블 기본키
CREATE UNIQUE INDEX PK_CUSTOMER
	ON CUSTOMER ( -- 고객회원테이블
		CU_ID ASC -- 고객아이디
	);

-- 고객회원테이블
ALTER TABLE CUSTOMER
	ADD
		CONSTRAINT PK_CUSTOMER -- 고객회원테이블 기본키
		PRIMARY KEY (
			CU_ID -- 고객아이디
		);

-- 고객회원테이블
COMMENT ON TABLE CUSTOMER IS '고객을 위한 테이블';

-- 고객아이디
COMMENT ON COLUMN CUSTOMER.CU_ID IS '이메일 형식의 고객아이디';

-- 비밀번호
COMMENT ON COLUMN CUSTOMER.CU_PW IS '고객의 비밀번호';

-- 성명
COMMENT ON COLUMN CUSTOMER.CU_NAME IS '고객의 이름';

-- 생년월일
COMMENT ON COLUMN CUSTOMER.CU_BIRTH IS '고객의 생년월일';

-- 휴대전화
COMMENT ON COLUMN CUSTOMER.CU_MOBILE IS '고객의 휴대전화';

-- 우편번호
COMMENT ON COLUMN CUSTOMER.CU_POST IS '고객의 우편번호';

-- 주소
COMMENT ON COLUMN CUSTOMER.CU_ADDR IS '고객의 주소';

-- 상세주소
COMMENT ON COLUMN CUSTOMER.CU_ADD_D IS '고객의 상세주소';

-- 카드번호
COMMENT ON COLUMN CUSTOMER.CU_CARD IS '고객의 카드번호';

-- 계좌번호
COMMENT ON COLUMN CUSTOMER.CU_ACCOUNT IS '고객의 계좌번호';

-- 가입일
COMMENT ON COLUMN CUSTOMER.CU_ENTRY_DATE IS '고객이 가입한 일시';

-- 유저상태
COMMENT ON COLUMN CUSTOMER.CU_STATE IS '고객의 상태';

-- 상태변경일
COMMENT ON COLUMN CUSTOMER.CU_UPDATE IS '상태를 변경한 날짜';

-- 권한정보테이블
CREATE TABLE AUTHORITY (
	AU_ID      VARCHAR2(6)   NOT NULL, -- 권한id
	AU_NAME    VARCHAR2(20)  NULL,     -- 권한명
	AU_CONTENT VARCHAR2(255) NULL      -- 권한설명
);

-- 권한정보테이블 기본키
CREATE UNIQUE INDEX PK_AUTHORITY
	ON AUTHORITY ( -- 권한정보테이블
		AU_ID ASC -- 권한id
	);

-- 권한정보테이블
ALTER TABLE AUTHORITY
	ADD
		CONSTRAINT PK_AUTHORITY -- 권한정보테이블 기본키
		PRIMARY KEY (
			AU_ID -- 권한id
		);

-- 권한정보테이블
COMMENT ON TABLE AUTHORITY IS '권한의 관한 테이블';

-- 권한id
COMMENT ON COLUMN AUTHORITY.AU_ID IS '권한 일련번호';

-- 권한명
COMMENT ON COLUMN AUTHORITY.AU_NAME IS '권한의 이름';

-- 권한설명
COMMENT ON COLUMN AUTHORITY.AU_CONTENT IS '해당 권한에 대한 설명';

-- 직원회원테이블
CREATE TABLE EMPLOYEE (
	EM_ID         VARCHAR2(20)  NOT NULL, -- 직원아이디
	EM_PW         VARCHAR2(30)  NULL,     -- 비밀번호
	EM_NAME       VARCHAR2(25)  NULL,     -- 성명
	EM_MOBILE     VARCHAR2(15)  NULL,     -- 휴대전화
	EM_WORK       VARCHAR2(255) NULL,     -- 근무지
	EM_ENTRY_DATE VARCHAR2(10)  NULL,     -- 입사일자
	AU_ID         VARCHAR(6)    NULL,     -- 권한id
	EM_STATE      VARCHAR(6)    NULL,     -- 유저상태
	EM_UPDATE     VARCHAR2(10)  NULL      -- 상태변경일
);

-- 직원회원테이블 기본키
CREATE UNIQUE INDEX PK_EMPLOYEE
	ON EMPLOYEE ( -- 직원회원테이블
		EM_ID ASC -- 직원아이디
	);

-- 직원회원테이블
ALTER TABLE EMPLOYEE
	ADD
		CONSTRAINT PK_EMPLOYEE -- 직원회원테이블 기본키
		PRIMARY KEY (
			EM_ID -- 직원아이디
		);

-- 직원회원테이블
COMMENT ON TABLE EMPLOYEE IS '직원을 위한 테이블';

-- 직원아이디
COMMENT ON COLUMN EMPLOYEE.EM_ID IS '직원의 아이디';

-- 비밀번호
COMMENT ON COLUMN EMPLOYEE.EM_PW IS '직원의 비밀번호';

-- 성명
COMMENT ON COLUMN EMPLOYEE.EM_NAME IS '직원의 이름';

-- 휴대전화
COMMENT ON COLUMN EMPLOYEE.EM_MOBILE IS '직원의 전화번호';

-- 근무지
COMMENT ON COLUMN EMPLOYEE.EM_WORK IS '직원의 근무지';

-- 입사일자
COMMENT ON COLUMN EMPLOYEE.EM_ENTRY_DATE IS '직원이 입사한 날짜';

-- 권한id
COMMENT ON COLUMN EMPLOYEE.AU_ID IS '권한 id';

-- 유저상태
COMMENT ON COLUMN EMPLOYEE.EM_STATE IS '직원의 상태';

-- 상태변경일
COMMENT ON COLUMN EMPLOYEE.EM_UPDATE IS '상태를 변경한 날짜';

-- 구매정보테이블
CREATE TABLE BUY (
	BUY_ID       VARCHAR2(20)  NOT NULL, -- 구매ID
	BUY_DAY      DATE          NULL,     -- 구매일
	CU_ID        VARCHAR2(30)  NULL,     -- 구매자아이디
	EM_ID        VARCHAR2(40)  NULL,     -- 직원아이디
	IT_ID        VARCHAR2(20)  NULL,     -- 품목ID
	BUY_PRICE    NUMBER(10)    NULL,     -- 구매단가
	BUY_COUNT    NUMBER        NULL,     -- 수량
	BUY_START    VARCHAR2(10)  NULL,     -- 렌탈시작일
	BUY_END      VARCHAR2(10)  NULL,     -- 렌탈종료일
	BUY_POST     VARCHAR2(6)   NULL,     -- 인도지_우편번호
	BUY_ADDR     VARCHAR2(255) NULL,     -- 인도지_주소
	BUY_ADD_D    VARCHAR2(255) NULL,     -- 인도지_상세주소
	BUY_METHOD   VARCHAR2(20)  NULL,     -- 결재방법
	BUY_PAY      VARCHAR2(20)  NULL,     -- 납부방법
	BUY_CCOMPANY VARCHAR2(40)  NULL,     -- 카드사
	BUY_CARD     VARCHAR2(20)  NULL,     -- 카드번호
	BUY_CBANK    VARCHAR2(40)  NULL,     -- 은행
	BUY_TRANSFER VARCHAR2(20)  NULL,     -- 이체계좌
	BUY_ACCOUNT  VARCHAR2(20)  NULL,     -- 수납계좌
	BUY_TOTAL    NUMBER(10)    NULL,     -- 총결제금액
	BUY_STACK    NUMBER(10)    NULL,     -- 누적결재금액
	BUY_DEBT     NUMBER(10)    NULL,     -- 미수금액
	BUY_REFUND   VARCHAR(3)    NULL,     -- 환불여부
	BUY_COMPLETE VARCHAR(1)    NULL      -- 자산보유여부
);

-- 구매정보테이블 기본키
CREATE UNIQUE INDEX PK_BUY
	ON BUY ( -- 구매정보테이블
		BUY_ID ASC -- 구매ID
	);

-- 구매정보테이블
ALTER TABLE BUY
	ADD
		CONSTRAINT PK_BUY -- 구매정보테이블 기본키
		PRIMARY KEY (
			BUY_ID -- 구매ID
		);

-- 구매정보테이블
COMMENT ON TABLE BUY IS '구매를 위한 테이블';

-- 구매ID
COMMENT ON COLUMN BUY.BUY_ID IS '구매 일련번호';

-- 구매일
COMMENT ON COLUMN BUY.BUY_DAY IS '구매한 일시';

-- 구매자아이디
COMMENT ON COLUMN BUY.CU_ID IS '구매한 사람의 아이디';

-- 직원아이디
COMMENT ON COLUMN BUY.EM_ID IS '해당 구매를 담당하는 직원의 아이디';

-- 품목ID
COMMENT ON COLUMN BUY.IT_ID IS '품목 일련번호';

-- 구매단가
COMMENT ON COLUMN BUY.BUY_PRICE IS '해당 제품의 구매단가';

-- 렌탈시작일
COMMENT ON COLUMN BUY.BUY_START IS '해당 제품의 렌탈시작일';

-- 렌탈종료일
COMMENT ON COLUMN BUY.BUY_END IS '해당 제품읠 렌탈종료일';

-- 인도지_우편번호
COMMENT ON COLUMN BUY.BUY_POST IS '해당 제품을 인수하는 곳의 우편번호';

-- 인도지_주소
COMMENT ON COLUMN BUY.BUY_ADDR IS '해당 제품을 인수하는 곳의 주소';

-- 인도지_상세주소
COMMENT ON COLUMN BUY.BUY_ADD_D IS '해당 제품을 인수하는 곳의 상세주소';

-- 결재방법
COMMENT ON COLUMN BUY.BUY_METHOD IS '제품을 결재하기 위한 방법';

-- 납부방법
COMMENT ON COLUMN BUY.BUY_PAY IS '제품을 납부하기 위한 방법';

-- 카드번호
COMMENT ON COLUMN BUY.BUY_CARD IS '구매자의 카드번호';

-- 이체계좌
COMMENT ON COLUMN BUY.BUY_TRANSFER IS '구매자의 계좌';

-- 수납계좌
COMMENT ON COLUMN BUY.BUY_ACCOUNT IS '판매자의 계좌';

-- 총결제금액
COMMENT ON COLUMN BUY.BUY_TOTAL IS '제품을 구매한 총 금액';

-- 누적결재금액
COMMENT ON COLUMN BUY.BUY_STACK IS '해당 고객의 누적결재금액';

-- 미수금액
COMMENT ON COLUMN BUY.BUY_DEBT IS '잔금';

-- 환불여부
COMMENT ON COLUMN BUY.BUY_REFUND IS '환불에 대한 여부';

-- 품목테이블
CREATE TABLE ITEM (
	IT_ID           VARCHAR2(20)  NOT NULL, -- 품목ID
	IT_NAME         VARCHAR2(40)  NULL,     -- 품목명
	IT_CODE         VARCHAR2(20)  NULL,     -- 품목코드
	IT_PRICE        NUMBER(10)    NULL,     -- 렌트표준단가(월간)
	IT_ACQUISITION  NUMBER(10)    NULL,     -- 자산취득표준가
	IT_period       NUMBER        NULL,     -- 기본대여기간
	IT_MANUFACTURER VARCHAR2(20)  NULL,     -- 제조사
	IT_CONTENT      VARCHAR2(255) NULL,     -- 설명
	IT_IMAGE        VARCHAR2(255) NULL      -- 품목이미지주소
);

-- 품목테이블 기본키
CREATE UNIQUE INDEX PK_ITEM
	ON ITEM ( -- 품목테이블
		IT_ID ASC -- 품목ID
	);

-- 품목테이블
ALTER TABLE ITEM
	ADD
		CONSTRAINT PK_ITEM -- 품목테이블 기본키
		PRIMARY KEY (
			IT_ID -- 품목ID
		);

-- 품목테이블
COMMENT ON TABLE ITEM IS '품목을 위한 테이블';

-- 품목ID
COMMENT ON COLUMN ITEM.IT_ID IS '품목 일련번호';

-- 품목명
COMMENT ON COLUMN ITEM.IT_NAME IS '해당하는 품목의 이름';

-- 렌트표준단가(월간)
COMMENT ON COLUMN ITEM.IT_PRICE IS '월간 렌트에 대한 품목의 표준 단가';

-- 자산취득표준가
COMMENT ON COLUMN ITEM.IT_ACQUISITION IS '해당 품목을 취득한 표준가격';

-- 기본대여기간
COMMENT ON COLUMN ITEM.IT_period IS '품목별 기본 렌탈기간(월단위)';

-- 설명
COMMENT ON COLUMN ITEM.IT_CONTENT IS '물품에 관한 제품 설명';

-- 품목이미지주소
COMMENT ON COLUMN ITEM.IT_IMAGE IS '해당 품목에 대한 이미지가 있는 주소';

-- 상담결과테이블
CREATE TABLE ADVICE (
	AD_ID  VARCHAR2(20) NOT NULL, -- 상담ID
	AD_DAY DATE         NULL,     -- 상담일자
	EM_ID  VARCHAR2(20) NULL      -- 직원아이디
);

-- 상담결과테이블 기본키
CREATE UNIQUE INDEX PK_ADVICE
	ON ADVICE ( -- 상담결과테이블
		AD_ID ASC -- 상담ID
	);

-- 상담결과테이블
ALTER TABLE ADVICE
	ADD
		CONSTRAINT PK_ADVICE -- 상담결과테이블 기본키
		PRIMARY KEY (
			AD_ID -- 상담ID
		);

-- 상담결과테이블
COMMENT ON TABLE ADVICE IS '상담의 결과를 기재하는 테이블';

-- 상담ID
COMMENT ON COLUMN ADVICE.AD_ID IS '상담 일련번호';

-- 직원아이디
COMMENT ON COLUMN ADVICE.EM_ID IS '해당 상담을 받은 직원의 아이디';

-- 방문요청테이블
CREATE TABLE VISIT (
	VI_ID       VARCHAR2(20)  NOT NULL, -- 방문요청ID
	BUY_ID      VARCHAR2(20)  NULL,     -- 구매ID
	IT_ID       VARCHAR2(20)  NULL,     -- 품목ID
	VI_NAME     VARCHAR2(25)  NULL,     -- 고객이름
	VI_DAY      DATE          NULL,     -- 방문일자
	VI_MOBILE   VARCHAR2(15)  NULL,     -- 전화번호
	VI_POST     VARCHAR2(6)   NULL,     -- 방문지_우편번호
	VI_ADDR     VARCHAR2(255) NULL,     -- 방문지_주소
	VI_ADD_D    VARCHAR2(255) NULL,     -- 방문지_상세주소
	VI_CODE     VARCHAR2(40)  NULL,     -- 요청코드
	CU_ID       VARCHAR2(30)  NULL,     -- 고객아이디
	EM_ID       VARCHAR2(40)  NULL,     -- 직원아이디
	VI_COMPLETE VARCHAR2(1)   NULL      -- 완료여부
);

-- 방문요청테이블 기본키
CREATE UNIQUE INDEX PK_VISIT
	ON VISIT ( -- 방문요청테이블
		VI_ID ASC -- 방문요청ID
	);

-- 방문요청테이블
ALTER TABLE VISIT
	ADD
		CONSTRAINT PK_VISIT -- 방문요청테이블 기본키
		PRIMARY KEY (
			VI_ID -- 방문요청ID
		);

-- 방문요청테이블
COMMENT ON TABLE VISIT IS '방문요청을 위한 테이블';

-- 방문요청ID
COMMENT ON COLUMN VISIT.VI_ID IS '방문요청 일련번호';

-- 고객이름
COMMENT ON COLUMN VISIT.VI_NAME IS '방문을 요청한 고객의 이름';

-- 방문일자
COMMENT ON COLUMN VISIT.VI_DAY IS '방문하는 일자';

-- 전화번호
COMMENT ON COLUMN VISIT.VI_MOBILE IS '방문하는 고객의 전화번호';

-- 방문지_우편번호
COMMENT ON COLUMN VISIT.VI_POST IS '방문하는 곳의 우편번호';

-- 방문지_주소
COMMENT ON COLUMN VISIT.VI_ADDR IS '방문하는 곳의 주소';

-- 방문지_상세주소
COMMENT ON COLUMN VISIT.VI_ADD_D IS '방문하는 곳의 상세주소';

-- 요청코드
COMMENT ON COLUMN VISIT.VI_CODE IS '해당 방문의 유형코드';

-- 고객아이디
COMMENT ON COLUMN VISIT.CU_ID IS '방문을 요청한 고객의 아이디';

-- 직원아이디
COMMENT ON COLUMN VISIT.EM_ID IS '방문요청을 받은 직원의 아이디';

-- 완료여부
COMMENT ON COLUMN VISIT.VI_COMPLETE IS '방문의 수행여부';

-- 입고요청처리
CREATE TABLE INPUT (
	IN_ID       VARCHAR2(20) NOT NULL, -- 입고ID
	PR_ID       VARCHAR2(30) NULL,     -- 자산ID
	IT_ID       VARCHAR2(20) NULL,     -- 품목명
	IN_COUNT    NUMBER       NULL,     -- 수량
	IN_STATE    VARCHAR2(20) NULL,     -- 자산상태
	IN_DAY      DATE         NULL,     -- 요청일자
	IN_DELIVERY VARCHAR2(25) NULL,     -- 인계자
	IN_FDAY     DATE         NULL,     -- 입고일자
	IN_COMPLETE VARCHAR2(1)  NULL      -- 입고완료여부
);

-- 입고요청처리 기본키
CREATE UNIQUE INDEX PK_INPUT
	ON INPUT ( -- 입고요청처리
		IN_ID ASC -- 입고ID
	);

-- 입고요청처리
ALTER TABLE INPUT
	ADD
		CONSTRAINT PK_INPUT -- 입고요청처리 기본키
		PRIMARY KEY (
			IN_ID -- 입고ID
		);

-- 입고요청처리
COMMENT ON TABLE INPUT IS '입고요청처리를 위한 테이블';

-- 입고ID
COMMENT ON COLUMN INPUT.IN_ID IS '입고 일련번호';

-- 자산ID
COMMENT ON COLUMN INPUT.PR_ID IS '자산 일련번호';

-- 품목명
COMMENT ON COLUMN INPUT.IT_ID IS '해당하는 자산의 제품명';

-- 수량
COMMENT ON COLUMN INPUT.IN_COUNT IS '해당하는 자산의 수량';

-- 자산상태
COMMENT ON COLUMN INPUT.IN_STATE IS '해당하는 자산의 요청상태';

-- 요청일자
COMMENT ON COLUMN INPUT.IN_DAY IS '해당하는 자산의 요청일자';

-- 인계자
COMMENT ON COLUMN INPUT.IN_DELIVERY IS '해당하는 자산의 인계자';

-- 출고처리
CREATE TABLE OUTPUT (
	OU_ID       VARCHAR2(20) NOT NULL, -- 출고ID
	PR_ID       VARCHAR2(30) NULL,     -- 자산ID
	IT_ID       VARCHAR2(20) NULL,     -- 품목명
	OU_STATE    VARCHAR2(20) NULL,     -- 자산상태
	OU_OUT_DAY  DATE         NULL,     -- 요청일자
	OU_COUNT    NUMBER       NULL,     -- 출고수량
	OU_DELIVERY VARCHAR2(25) NULL,     -- 인수자
	OU_DAY      DATE         NULL,     -- 출고일자
	OU_COMPLETE VARCHAR2(1)  NULL      -- 출고완료여부
);

-- 출고처리 기본키
CREATE UNIQUE INDEX PK_OUTPUT
	ON OUTPUT ( -- 출고처리
		OU_ID ASC -- 출고ID
	);

-- 출고처리
ALTER TABLE OUTPUT
	ADD
		CONSTRAINT PK_OUTPUT -- 출고처리 기본키
		PRIMARY KEY (
			OU_ID -- 출고ID
		);

-- 출고처리
COMMENT ON TABLE OUTPUT IS '출고처리를 위한 테이블';

-- 출고ID
COMMENT ON COLUMN OUTPUT.OU_ID IS '출고 일련번호';

-- 자산ID
COMMENT ON COLUMN OUTPUT.PR_ID IS '자산 일련번호';

-- 품목명
COMMENT ON COLUMN OUTPUT.IT_ID IS '해당하는 제품의 이름';

-- 자산상태
COMMENT ON COLUMN OUTPUT.OU_STATE IS '해당하는 제품의 요청상태';

-- 요청일자
COMMENT ON COLUMN OUTPUT.OU_OUT_DAY IS '해당하는 제품의 요청일자';

-- 출고수량
COMMENT ON COLUMN OUTPUT.OU_COUNT IS '해당하는 제품의 출고수량';

-- 인수자
COMMENT ON COLUMN OUTPUT.OU_DELIVERY IS '해당하는 자산의 인수자';

-- 출고일자
COMMENT ON COLUMN OUTPUT.OU_DAY IS '해당하는 제품의 출고일자';

-- 외부수리기사 as결과등록
CREATE TABLE FIX (
	FIX_ID            VARCHAR2(20)  NOT NULL, -- 외부asID
	VI_ID             VARCHAR2(20)  NULL,     -- 방문요청ID
	FIX_DAY           DATE          NULL,     -- 방문일
	CU_ID             VARCHAR2(30)  NULL,     -- 고객아이디
	CU_NAME           VARCHAR2(25)  NULL,     -- 고객명
	PR_ID             VARCHAR2(30)  NULL,     -- 자산ID
	FIX_STATE         VARCHAR2(20)  NULL,     -- 자산상태
	FIX_ENGINEER_ID   VARCHAR2(40)  NULL,     -- 수리기사ID
	FIX_ENGINEER_NAME VARCHAR2(25)  NULL,     -- 수리기사명
	FIX_SORT          VARCHAR2(40)  NULL,     -- as분류
	FIX_CONTENT       VARCHAR2(255) NULL      -- as결과내역
);

-- 외부수리기사 as결과등록 기본키2
CREATE UNIQUE INDEX PK_FIX
	ON FIX ( -- 외부수리기사 as결과등록
		FIX_ID ASC -- 외부asID
	);

-- 외부수리기사 as결과등록
ALTER TABLE FIX
	ADD
		CONSTRAINT PK_FIX -- 외부수리기사 as결과등록 기본키2
		PRIMARY KEY (
			FIX_ID -- 외부asID
		);

-- 외부수리기사 as결과등록
COMMENT ON TABLE FIX IS '외부수리 as결과 등록을 위한 테이블';

-- 외부asID
COMMENT ON COLUMN FIX.FIX_ID IS '외부as 일련번호';

-- 방문일
COMMENT ON COLUMN FIX.FIX_DAY IS '외부수리 방문일';

-- 고객아이디
COMMENT ON COLUMN FIX.CU_ID IS '외부수리 대상 고객의 아이디';

-- 고객명
COMMENT ON COLUMN FIX.CU_NAME IS '외부수리 대상 고객의 이름';

-- 자산ID
COMMENT ON COLUMN FIX.PR_ID IS '자산 일련번호';

-- 자산상태
COMMENT ON COLUMN FIX.FIX_STATE IS '해당 자산의 상태';

-- 수리기사ID
COMMENT ON COLUMN FIX.FIX_ENGINEER_ID IS '수리기사의 ID';

-- 수리기사명
COMMENT ON COLUMN FIX.FIX_ENGINEER_NAME IS '수리기사의 이름';

-- as분류
COMMENT ON COLUMN FIX.FIX_SORT IS 'as분류를 위한 코드';

-- as결과내역
COMMENT ON COLUMN FIX.FIX_CONTENT IS '해당 as의 결과내역';

-- 내부수리기사 점검결과등록
CREATE TABLE REPAIR (
	RE_ID            VARCHAR2(20)  NOT NULL, -- 점검결과ID
	IT_NAME          VARCHAR2(40)  NULL,     -- 품목명
	PR_ID            VARCHAR2(30)  NULL,     -- 자산ID
	RE_ENGINEER_ID   VARCHAR2(40)  NULL,     -- 수리기사ID
	RE_ENGINEER_NAME VARCHAR2(25)  NULL,     -- 수리기사명
	RE_SORT          VARCHAR2(20)  NULL,     -- 점검분류
	RE_STATE         VARCHAR2(20)  NULL,     -- 자산상태
	RE_DAY           DATE          NULL,     -- 수리일자
	RE_CONTENT       VARCHAR2(255) NULL      -- 점검내역
);

-- 내부수리기사 점검결과등록 기본키
CREATE UNIQUE INDEX PK_REPAIR
	ON REPAIR ( -- 내부수리기사 점검결과등록
		RE_ID ASC -- 점검결과ID
	);

-- 내부수리기사 점검결과등록
ALTER TABLE REPAIR
	ADD
		CONSTRAINT PK_REPAIR -- 내부수리기사 점검결과등록 기본키
		PRIMARY KEY (
			RE_ID -- 점검결과ID
		);

-- 내부수리기사 점검결과등록
COMMENT ON TABLE REPAIR IS '내부수리의 결과를 위한 테이블';

-- 점검결과ID
COMMENT ON COLUMN REPAIR.RE_ID IS '점검결과 일련번호';

-- 품목명
COMMENT ON COLUMN REPAIR.IT_NAME IS '수리에 관한 제품명';

-- 자산ID
COMMENT ON COLUMN REPAIR.PR_ID IS '자산 일련번호';

-- 수리기사ID
COMMENT ON COLUMN REPAIR.RE_ENGINEER_ID IS '해당 수리기사의 ID';

-- 수리기사명
COMMENT ON COLUMN REPAIR.RE_ENGINEER_NAME IS '해당 수리기사의 이름';

-- 점검분류
COMMENT ON COLUMN REPAIR.RE_SORT IS '해당 점검의 분류코드';

-- 자산상태
COMMENT ON COLUMN REPAIR.RE_STATE IS '해당 자산의 상태';

-- 수리일자
COMMENT ON COLUMN REPAIR.RE_DAY IS '수리일시';

-- 점검내역
COMMENT ON COLUMN REPAIR.RE_CONTENT IS '해당 자산의 점검일지';

-- 부품
CREATE TABLE PARTS (
	PA_ID           VARCHAR2(20) NOT NULL, -- 부품ID
	PA_MODEL        VARCHAR2(40) NULL,     -- 모델명
	PA_SEARCH       VARCHAR2(40) NULL,     -- 검색명
	IT_ID           VARCHAR2(20) NULL,     -- 품목ID
	PA_MANUFACTURER VARCHAR2(20) NULL,     -- 제조사
	PA_TOTAL        NUMBER       NULL,     -- 총재고량
	PA_SAFETY       NUMBER       NULL      -- 안전재고량
);

-- 부품 기본키2
CREATE UNIQUE INDEX PK_PARTS
	ON PARTS ( -- 부품
		PA_ID ASC -- 부품ID
	);

-- 부품
ALTER TABLE PARTS
	ADD
		CONSTRAINT PK_PARTS -- 부품 기본키2
		PRIMARY KEY (
			PA_ID -- 부품ID
		);

-- 부품
COMMENT ON TABLE PARTS IS '부품을 위한 테이블';

-- 부품ID
COMMENT ON COLUMN PARTS.PA_ID IS '부품 일련번호';

-- 모델명
COMMENT ON COLUMN PARTS.PA_MODEL IS '해당 부품이 들어가는 모델명';

-- 검색명
COMMENT ON COLUMN PARTS.PA_SEARCH IS '검색을 위한 키워드';

-- 품목ID
COMMENT ON COLUMN PARTS.IT_ID IS '품목 일련번호';

-- 제조사
COMMENT ON COLUMN PARTS.PA_MANUFACTURER IS '해당 부품의 제조사';

-- 총재고량
COMMENT ON COLUMN PARTS.PA_TOTAL IS '해당 부품의 총 재고량';

-- 안전재고량
COMMENT ON COLUMN PARTS.PA_SAFETY IS '해당 부품의 안전재고량';

-- 외부수리기사 회수결과등록
CREATE TABLE DEPRIVE (
	DE_ID            VARCHAR2(20)  NOT NULL, -- 외부회수ID
	VI_ID            VARCHAR2(20)  NULL,     -- 방문요청ID
	DE_DAY           DATE          NULL,     -- 방문일
	CU_ID            VARCHAR2(30)  NULL,     -- 고객아이디
	CU_NAME          VARCHAR2(25)  NULL,     -- 고객명
	PR_ID            VARCHAR2(30)  NULL,     -- 자산ID
	DE_STATE         VARCHAR2(20)  NULL,     -- 자산상태
	DE_ENGINEER_ID   VARCHAR2(40)  NULL,     -- 수리기사ID
	DE_ENGINEER_NAME VARCHAR2(25)  NULL,     -- 수리기사명
	DE_CONTENT       VARCHAR2(255) NULL      -- 회수결과내역
);

-- 외부수리기사 회수결과등록 기본키2
CREATE UNIQUE INDEX PK_DEPRIVE
	ON DEPRIVE ( -- 외부수리기사 회수결과등록
		DE_ID ASC -- 외부회수ID
	);

-- 외부수리기사 회수결과등록
ALTER TABLE DEPRIVE
	ADD
		CONSTRAINT PK_DEPRIVE -- 외부수리기사 회수결과등록 기본키2
		PRIMARY KEY (
			DE_ID -- 외부회수ID
		);

-- 외부수리기사 회수결과등록
COMMENT ON TABLE DEPRIVE IS '외부수리 회수결과 등록을 위한 페이지';

-- 외부회수ID
COMMENT ON COLUMN DEPRIVE.DE_ID IS '외부회수 일련번호';

-- 방문일
COMMENT ON COLUMN DEPRIVE.DE_DAY IS '외부회수를 위한 방문일';

-- 고객아이디
COMMENT ON COLUMN DEPRIVE.CU_ID IS '외부회수에 해당하는 고객아이디';

-- 고객명
COMMENT ON COLUMN DEPRIVE.CU_NAME IS '외부회수에 해당하는 고객의 이름';

-- 자산ID
COMMENT ON COLUMN DEPRIVE.PR_ID IS '자산 일련번호';

-- 자산상태
COMMENT ON COLUMN DEPRIVE.DE_STATE IS '해당 자산의 상태';

-- 수리기사ID
COMMENT ON COLUMN DEPRIVE.DE_ENGINEER_ID IS '외부회수를 맡은 수리기사 ID';

-- 수리기사명
COMMENT ON COLUMN DEPRIVE.DE_ENGINEER_NAME IS '외부회수를 맡은 수리기사 이름';

-- 회수결과내역
COMMENT ON COLUMN DEPRIVE.DE_CONTENT IS '회수에 대한 결과내역';

-- 사용부품
CREATE TABLE USE_PARTS (
	RE_ID     VARCHAR2(20) NULL, -- 점검결과ID
	PA_ID     VARCHAR2(20) NULL, -- 부품ID
	USE_COUNT NUMBER       NULL  -- 수량
);

-- 실사결과
CREATE TABLE EXAM_RESULT (
	ER_EXID    VARCHAR2(20) NOT NULL, -- 실사번호
	ER_ITID    VARCHAR2(20) NULL,     -- 품목ID
	ER_PRID    VARCHAR2(30) NULL,     -- 자산ID
	ER_DATE    VARCHAR2(10) NULL,     -- 실사일자
	ER_PRSTATE VARCHAR2(20) NULL      -- 자산상태
);

-- 실사결과
COMMENT ON TABLE EXAM_RESULT IS '실사결과 등록용 테이블';

-- 상담결과상세테이블
CREATE TABLE ADVICE_DETAIL (
	AD_ID      VARCHAR2(20)  NOT NULL, -- 상담ID
	BUY_ID     VARCHAR2(20)  NULL,     -- 구매ID
	AD_SORT    VARCHAR(1)    NULL,     -- 상담구분
	AD_CONTENT VARCHAR2(255) NULL      -- 상담내용
);

-- 상담결과상세테이블
COMMENT ON TABLE ADVICE_DETAIL IS '상담의 결과를 기재하는 테이블';

-- 상담ID
COMMENT ON COLUMN ADVICE_DETAIL.AD_ID IS '상담 일련번호';

-- 구매ID
COMMENT ON COLUMN ADVICE_DETAIL.BUY_ID IS '구매자의 아이디';

-- 상담구분
COMMENT ON COLUMN ADVICE_DETAIL.AD_SORT IS '상담을 구분하기 위한 코드';

-- 상담내용
COMMENT ON COLUMN ADVICE_DETAIL.AD_CONTENT IS '상담의 내용';




-- 품목 테이블
-- insert into ITEM values('품목id', '품목명', '품목코드',  렌트표준단가(월간), 자산취득표준가, 기본대여기간, '제조사', '품목설명', '이미지주소');
insert into ITEM values('IT0000000001', '쿠쿠 냉온정수기렌탈', 'CP-BN601HW', 27900, 3600000, 36, 'cuckoo', '제품형태 : 하프\n\r제품색상 : 화이트\n\r필터방식 : 나노필터\n\r제품종류 : 냉온정수기', 'PR0000000001_CP-BN601HW.png');
insert into ITEM values('IT0000000002', '쿠쿠 직수형살균 냉온정수기렌탈', 'CP-LS011B', 34900, 4000000, 36, 'cuckoo', '제품형태 : 하프\n\r제품색상 : 화이트\n\r필터방식 : 나노필터\n\r제품종류 : 냉온정수기', 'PR0000000002_CP-LS011B.png');
insert into ITEM values('IT0000000003', '쿠쿠 직수형살균 냉온정수기렌탈', 'CP-JS011B', 29900, 3700000, 36, 'cuckoo', '제품형태 : 하프\n\r제품색상 : 골드\n\r필터방식 : 나노필터\n\r제품종류 : 냉온정수기', 'PR0000000003_CP-JS011B.png');
insert into ITEM values('IT0000000004', '쿠쿠 직수형살균 정수기렌탈', 'CP-M011B', 20900, 3200000, 36, 'cuckoo', '제품형태 : 하프\n\r제품색상 : 블랙\n\r필터방식 : 나노필터\n\r제품종류 : 일반정수기', 'PR0000000004_CP-M011B.png');
insert into ITEM values('IT0000000005', '쿠쿠 냉온정수기렌탈', 'CP-K501HW', 21900, 3300000, 36, 'cuckoo', '제품형태 : 하프\n\r제품색상 : 화이트\n\r필터방식 : 나노필터\n\r제품종류 : 냉온정수기', 'PR0000000005_CP-K501HW.png');


-- 고객 테이블
-- insert into CUSTOMER values('고객아이디', '비밀번호', '성명', '생년월일', '휴대전화', '우편', '주소', '상세주소', '카드사', '카드번호', '은행', '계좌번호', '가입일', '상태', '변경일');
insert into CUSTOMER values('kjl1043@hanmail.net', 'leedhun9393', '김재림', '1970-01-02', '010-2244-5557', '11521', '경기 양주시 장흥면 가마골로 19-77 (부곡리)', '5507부대', '우리카드', '1245777788884444', '우리은행', '100-12574-12565', '2017-12-08', 'u', '2017-12-08');
insert into CUSTOMER values('leedhun9393@naver.com', 'leedhun9393', '이동훈', '1993-09-17', '010-2541-5872', '52438', '경남 남해군 이동면 미국마을길 5 (용소리)', 'XX아파트 409동 2000호',  '삼성카드', '1245777788884444', '국민은행', '1011-2455-1156812', '2017-12-08', 'u', '2017-12-08');
insert into CUSTOMER values('ohyes0204@naver.com', 'leedhun9393', '이민정', '1980-11-02', '010-6523-2348', '24104', '강원 화천군 상서면 다목1길 7 (다목리)', '27사단 259포병대대 6377부대', '신한카드', '1245777788884444', '씨티은행', '874512-1554-4577', '2017-12-08', 'u', '2017-12-08');
insert into CUSTOMER values('leewonho93@naver.com', 'leedhun9393', '이원호', '2000-08-08', '010-9852-1258', '42957', '대구 달성군 화원읍 류목정길 5 (설화리)', 'XX아파트 105동 504호',  '비씨카드', '1245777788884444', '외환은행', '10-021115-54477', '2017-12-08', 'u', '2017-12-08');


-- 직원 테이블
-- insert into EMPLOYEE values('직원아이디', '비밀번호', '성명', '휴대전화', '근무지', '입사일', '권한id', '유저상태', '변경일');
insert into EMPLOYEE values('20170001', '20170001', '이동훈', '010-8523-9852', '강원 화천군 상서면 다목1길 7 (다목리)', '2017-12-08', '1', 'u', '2017-12-08');
insert into EMPLOYEE values('20170002', '20170002', '김재림', '010-2542-6452', '강원 화천군 상서면 다목1길 7 (다목리)', '2017-12-08', '2', 'u', '2017-12-08');
insert into EMPLOYEE values('20170003', '20170003', '이민정', '010-6552-1225', '강원 화천군 상서면 다목1길 7 (다목리)', '2017-12-08', '3', 'u', '2017-12-08');
insert into EMPLOYEE values('20170004', '20170004', '이원호', '010-1515-1515', '강원 화천군 상서면 다목1길 7 (다목리)', '2017-12-08', '4', 'u', '2017-12-08');


-- 자산 테이블
-- insert into PRODUCT values('자산id', '구매id', '품목ID', '품목명', '최초입고일자', '입고일자', '출고일자', '출고대상', '지역', '요규사항', '자산상태', '수량', 'QR코드');
insert into PRODUCT values('PR0000000001', '', 'IT0000000001', '쿠쿠 냉온정수기렌탈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), '', '', '', 'wa_product', 10, 'PR0000000001_QR.png');
insert into PRODUCT values('PR0000000002', '', 'IT0000000002', '쿠쿠 직수형살균 냉온정수기렌탈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), '', '', '', 'wa_state', 10, 'PR0000000002_QR.png');
insert into PRODUCT values('PR0000000003', 'BU0000000004', 'IT0000000003', '쿠쿠 직수형살균 냉온정수기렌탈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), '이민정', '', '', 're_return', 40, 'PR0000000003_QR.png');
insert into PRODUCT values('PR0000000004', '', 'IT0000000004', '쿠쿠 직수형살균 정수기렌탈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), '', '', '', 'wa_product', 10, 'PR0000000004_QR.png');
insert into PRODUCT values('PR0000000005', 'BU0000000005', 'IT0000000005', '쿠쿠 냉온정수기렌탈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'leedhun9393@naver.com', '', '', 're_return', 10, 'PR0000000005_QR.png');
insert into product values('PR0000000008', '','','',to_date('2017-12-0821:56', 'yyyy-mm-ddhh24:mi'),'','','','','','wa_state','','');


-- 권한 테이블
-- insert into AUTHORITY values('권한id','권한명','권한설명');
insert into AUTHORITY values('1','관리자','시스템 관리 및 설정');
insert into AUTHORITY values('2','내부수리기사','회사 내부에서 수리와 관련된 업무 처리');
insert into AUTHORITY values('3','외부수리기사','회사 외부에서 수리와 관련된 업무 처리');
insert into AUTHORITY values('4','입고관리자','물품입고와 관련된 업무 처리');
insert into AUTHORITY values('5','출고관리자','물품출고와 관련된 업무 처리');
insert into AUTHORITY values('6','상담사','상담과 관련된 업무 처리');
insert into AUTHORITY values('7','자산관리자','자산과 관련된 업무 처리');
insert into AUTHORITY values('8','영업관리자','통계와 관련된 업무 처리');


-- 상담 테이블
-- insert into ADVICE values('상담id','상담일자','직원아이디');
insert into ADVICE values('ad0000000001',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'20170003');
insert into ADVICE values('ad0000000002',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'20170003');
insert into ADVICE values('ad0000000003',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'20170003');
insert into ADVICE values('ad0000000004',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'20170003');
insert into ADVICE values('ad0000000005',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'20170003');


-- 상담 세부 테이블
-- insert into ADVICE_DETAIL values('상담id','구매ID','상담구분', '상담내용');
insert into ADVICE_DETAIL values('ad0000000001','BU0000000002', 'a','물 맛이 이상해요.');
insert into ADVICE_DETAIL values('ad0000000002','BU0000000002', 'a','물 맛이 너무 이상해요.');
insert into ADVICE_DETAIL values('ad0000000003','BU0000000002', 'a','물 맛이 엄청 이상해요.');
insert into ADVICE_DETAIL values('ad0000000004','BU0000000004', 'd','환불 해줘요.');
insert into ADVICE_DETAIL values('ad0000000005','BU0000000005', 'd','기간이 다 되가네요.');


-- 부품 테이블
-- insert into PARTS values('부품ID','모델명','검색명', '품목ID', '제조사', 총재고량, 안전재고량);
insert into PARTS values('PA0000000001','L피팅','피팅', 'IT0000000001', '세진아쿠아', 100, 30);
insert into PARTS values('PA0000000002','I피팅','피팅', 'IT0000000002', '세진아쿠아', 70, 20);
insert into PARTS values('PA0000000003','T피팅','피팅', 'IT0000000003', '세진아쿠아', 100, 30);
insert into PARTS values('PA0000000004','소형아답터 A형','소형아답터', 'IT0000000004', '세진아쿠아', 60, 15);
insert into PARTS values('PA0000000005','중형아답터 A형','중형아답터', 'IT0000000005', '세진아쿠아', 50, 40);



-- 외부수리기사 회수결과 테이블
-- insert into DEPRIVE values('외부회수id', '방문요청id', '방문일', '고객아이디', '고객명', '자산id', '자산상태', '수리기사id', '수리기사명', '회수결과내역');
insert into DEPRIVE values('de0000000001', 'vi0000000003', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'ohyes0204@naver.com', '이민정', 'PR0000000002', 're_return', '20170001', '이동훈', '고객 불 만족으로 인한 회수');
insert into DEPRIVE values('de0000000002', 'vi0000000004', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'ohyes0204@naver.com', '이민정', 'PR0000000003', 're_return', '20170001', '이동훈', '동훈이가 고장내서 회수');
insert into DEPRIVE values('de0000000003', 'vi0000000005', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'leedhun9393@naver.com', '이동훈', 'PR0000000005', 're_return', '20170001', '이동훈', '기간 만료로 인한 회수');


-- 구매정보 테이블
-- insert into BUY values('구매ID','구매일','고객ID','직원ID','품목ID',구매단가,수량,'렌탈시작일','렌탈종료일','우편번호','주소','상세주소','결제방식','매월납','카드사','카드번호','은행','이체계좌','수납계좌','총결제금액','누적결제금액','미수금액','환불여부','자산보유여부');
insert into BUY values('BU0000000001',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'kjl1043@hanmail.net','20170001','PR0000000001',27900,20,'2014-11-08','2017-11-08','11521','경기 양주시 장흥면 가마골로 19-77 (부곡리)','5507부대','money','매월납','','','','','110-1254-852214','3600000','3600000','0','N','N');
insert into BUY values('BU0000000002',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'kjl1043@hanmail.net','20170001','PR0000000002',34900,20,'2014-11-13','2017-11-13','11521','경기 양주시 장흥면 가마골로 19-77 (부곡리)','5507부대','money','매월납','','','','','110-1254-852214','4000000','4000000','0','N','N');
insert into BUY values('BU0000000003',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'ohyes0204@naver.com','20170001','PR0000000003',29900,40,'2014-12-08','2017-12-08','52438','경남 남해군 이동면 미국마을길 5 (용소리)','XX아파트 409동 2000호','card','매월납','삼성카드','1245777788884444','','','110-1254-852214',3700000,'3400000','300000','Y','N');
insert into BUY values('BU0000000004',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'leewonho93@naver.com','20170001','PR0000000004',20900,20,'2014-11-15','2017-11-15','42957','대구 달성군 화원읍 류목정길 5 (설화리)','XX아파트 105동 504호','account','매월납','','','외환은행','10-021115-54477','110-1254-852214','3200000','3200000','0','N','N');
insert into BUY values('BU0000000005',to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'),'leedhun9393@naver.com','20170001','PR0000000005',21900,10,'2014-12-08','2017-12-08','24104','강원 화천군 상서면 다목1길 7 (다목리)','27사단 259포병대대 6377부대','card','매월납','신한카드','1245777788884444','','','110-1254-852214',3300000,'3300000','0','N','N');


-- 사용 부품 테이블
-- insert into USE_PARTS values('점검결과ID', '부품ID', '수량');
insert into USE_PARTS values('RE0000000001', 'PA0000000001', 2);
insert into USE_PARTS values('RE0000000001', 'PA0000000002', 1);
insert into USE_PARTS values('RE0000000001', 'PA0000000003', 2);
insert into USE_PARTS values('RE0000000002', 'PA0000000001', 5);
insert into USE_PARTS values('RE0000000002', 'PA0000000003', 2);
insert into USE_PARTS values('RE0000000002', 'PA0000000005', 3);

--dong


-- 입고요청처리
-- insert into input values('입고ID', '자산ID', '품목ID', 수량, '자산상태', '요청일자', '인계자', '입고일자', '입고완료여부');
insert into input values('IN0000000001', 'PR0000000008', 'IT0000000001', 20, 're_ninput', systimestamp, '이원호', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'N');
insert into input values('IN0000000002', 'PR0000000009', 'IT0000000002', 30, 're_ninput', systimestamp, '김재림', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'N');
insert into input values('IN0000000003', 'PR0000000003', 'IT0000000002', 40, 're_return', systimestamp, '이민정', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'N');
insert into input values('IN0000000004', 'PR0000000005', 'IT0000000004', 10, 're_return', systimestamp, '이동훈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'N');
insert into input values('IN0000000005', 'PR0000000008', '', 10, 're_ninput', systimestamp, '이동훈', to_date('2017-12-0816:49', 'yyyy-mm-ddhh24:mi'), 'N');

-- 출고요청처리
-- insert into output values('출고ID', '자산ID', '품목ID', '자산상태', '요청일자', 출고수량, '인수자', '출고일자', '출고완료여부');
insert into output values('ou0000000001', 'PR0000000007', 'IT0000000001', 're_output', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 10, '이원호', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 'N');
insert into output values('ou0000000002', 'PR0000000008', 'IT0000000002', 're_output', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 10, '이민정', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 'N');
insert into output values('ou0000000003', 'PR0000000009', 'IT0000000001', 're_exoutput', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 10, '이동훈', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 'N');
insert into output values('ou0000000004', 'PR0000000010', 'IT0000000004', 're_exoutput', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 10, '김재림', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 'N');

-- 방문요청테이블
-- insert into visit values('방문요청ID', '구매ID', '품목ID', '고객이름', '방문일자', '전화번호', '방문지_우편번호', '방문지_주소', '방문지_상세주소', '요청코드', '고객아이디', '직원아이디', '완료여부');
insert into visit values('vi0000000001', 'BU0000000001', 'IT0000000001', '이원호',  to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '010-2582-4564', '76541', '강원도 화천군 상서면 다목1길 7 (다목리)', '27사단 259포병대대 6377부대', 'As', 'leewonho93@naver.com', '20170001', 'N');
insert into visit values('vi0000000002', 'BU0000000002', 'IT0000000002', '김재림',  to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '010-2582-4564', '76541', '경기 양주시 장흥면 가마골로 19-77 (부곡리) ', '5507부대', 'Refund', 'leedhun9393@naver.com', '20170001', 'N');
insert into visit values('vi0000000003', 'BU0000000003', 'IT0000000003', '이동훈',  to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '010-2582-4564', '76541', '대구 달성군 화원읍 류목정길 5 (설화리)', 'XX아파트 105동 504호', 'Refund', 'kil1043@hanmail.net', '20170001', 'N');
insert into visit values('vi0000000004', 'BU0000000004', 'IT0000000004', '이민정',  to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '010-2582-4564', '76541', '경남 남해군 이동면 미국마을길 5 (용소리)', 'XX아파트 409동 2000호', 'As', 'ohyes0204@naver.com', '20170001', 'N');
insert into visit values('vi0000000005', 'BU0000000005', 'IT0000000005', '이동훈',  to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '010-2582-4564', '76541', '경기도 안양시 안양일번가', '코인노래방', 'Refund', 'ohyes0204@naver.com', '20170001', 'N');

-- 실사계획
-- insert into examination values('실사번호', '시작기간', '종료기간', '비고');
insert into examination values('1', '2017-12-08', '2017-12-09', '정기실사');
insert into examination values('2', '2017-12-09', '2017-12-10', '불시실사');
insert into examination values('3', '2017-12-08', '2017-12-09', '정기실사');
insert into examination values('4', '2017-12-08', '2017-12-09', '정기실사');
insert into examination values('5', '2017-12-08', '2017-12-09', '자산 손망으로 인한 실사');

-- 실사결과
-- insert into exam_result('실사번호', '품목ID', '자산ID', '실사일자', '자산상태');
insert into exam_result values('1', 'IT0000000002', 'PR0000000002', '2017-12-08', '이상없음');
insert into exam_result values('1', 'IT0000000003', 'PR0000000003', '2017-12-08', '로스');
insert into exam_result values('2', 'IT0000000001', 'PR0000000001', '2017-12-08', '이상없음');
insert into exam_result values('2', 'IT0000000004', 'PR0000000004', '2017-12-08', '이상없음');
insert into exam_result values('5', 'IT0000000005', 'PR0000000005', '2017-12-08', '이상없음');

-- 외부수리기사 as결과 등록
-- insert into fix values('외부asID', '방문요청ID', '방문일', '고객아이디', '고객명', '자산ID', '자산상태', '수리기사ID', '수리기사명', 'as분류', 'as결과내역');
insert into fix values('fi0000000001', 'vi0000000001',to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 'leewonho93@naver.com', '이원호짱짱', 'PR0000000001', 'do_product', '20170001', '이동훈', '일반수리', '소모품교체');
insert into fix values('fi0000000002', 'vi0000000002',to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), 'leewonho93@naver.com', '이원호불호', 'PR0000000002', 're_return', '20170001', '이동훈', '기능수리', '메인부품 노화로 인한 사내수리');


-- 내부수리기사 점검결과등록
-- insert into repair values('점검결과ID', '품목명', '자산ID', '수리기사ID', '수리기사명', '점검분류', '자산상태', '수리일자', '점검내역');
insert into repair values('RE0000000001', '쿠쿠 냉온정수기렌탈', 'PR0000000001', '20170002', '김재림', 'wa_product', 'wa_product', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '점검완료');
insert into repair values('RE0000000002', '쿠쿠 직수형살균 냉온정수기렌탈', 'PR0000000002', '20170002', '김재림', 'wa_product', 'wa_product', to_date('2017-12-0817:09', 'yyyy-mm-ddhh24:mi'), '점검완료');

commit;

purge recyclebin;

commit;

